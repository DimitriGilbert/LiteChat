{
  "jumpToBottom": "Scroll to Bottom",
  "pauseAutoscroll": "Pause Autoscroll",
  "resumeAutoscroll": "Resume Autoscroll",
  "loadingConversation": "Loading conversation...",
  "processing": "Processing...",
  "unknownModel": "Unknown Model",
  "generatingResponse": "Generating response...",
  "loadingModel": "Loading Model...",
  "assistantLoading": "Assistant (Loading...)",
  "streamingStatus": "Streaming...",
  "reasoning": "Reasoning",
  "unfoldReasoning": "Unfold reasoning",
  "foldReasoning": "Fold reasoning",
  "unfoldResponse": "Unfold response",
  "foldResponse": "Fold response",
  "assistant": "Assistant",
  "reasoningPrefix": "[Reasoning] ",
  "toolCallsPrefix": "[ Tool Call(s)] ",
  "noTextResponse": "[No text response]",
  "errorLabel": "Error:",
  "reasoningSectionTitle": "Reasoning",
  "copyReasoning": "Copy Reasoning",
  "reasoningCopiedSuccess": "Reasoning copied!",
  "failedToCopyReasoning": "Failed to copy reasoning.",
  "unfoldPreview": "Unfold preview",
  "foldPreview": "Fold preview",
  "close": "Close",
  "sending": "Sending...",
  "userPromptCopiedSuccess": "User prompt copied!",
  "failedToCopyPrompt": "Failed to copy prompt.",
  "noContent": "No content",
  "promptLabel": "Prompt",
  "filesLabel": "Files",
  "noFiles": "No files",
  "streaming": {
    "completed": "Completed",
    "thinking": "Thinking...",
    "generating": "Generating...",
    "stopped": "Stopped",
    "error": "Error"
  },
  "actions": {
    "copy": "Copy",
    "copySuccess": "Copied successfully!",
    "copyFail": "Failed to copy.",
    "noContent": "No content to copy or action disabled.",
    "copyAriaLabel": "Copy content",
    "regenerate": "Regenerate",
    "delete": "Delete",
    "regenerateDisabled": "Regeneration is currently disabled.",
    "regenerateAriaLabel": "Regenerate Response",
    "editResponseDisabled": "Response editing is currently disabled.",
    "editResponse": "Edit Response",
    "editResponseAriaLabel": "Edit Assistant Response",
    "responseCannotBeEmpty": "Response cannot be empty",
    "responseEditedSuccessfully": "Response edited successfully",
    "responseContent": "Response Content",
    "editResponsePlaceholder": "Edit the assistant's response...",
    "cancel": "Cancel",
    "save": "Save Changes",
    "forkDisabled": "Fork is currently disabled.",
    "fork": "Fork",
    "forkAriaLabel": "Fork Conversation",
    "forkCompactDisabled": "Fork compact is currently disabled.",
    "summarize": "Summarize",
    "forkCompactAriaLabel": "Fork Conversation with Compact Summary",
    "forkWith": "Fork with",
    "forkWithModelAriaLabel": "Fork Conversation with Model Selection",
    "aiActions": "AI Actions",
    "repairCode": "Repair Code",
    "enhanceCode": "Enhance Code",
    "enhanceWithContext": "Enhance with Context",
    "thisMessageBlocks": "This Message's Blocks",
    "thisConversationBlocks": "This Conversation's Blocks",
    "completeFromContext": "Complete from Context",
    "ratings": {
      "terrible": "Terrible",
      "veryBad": "Very Bad",
      "bad": "Bad",
      "poor": "Poor",
      "belowAverage": "Below Average",
      "neutral": "Neutral",
      "aboveAverage": "Above Average",
      "good": "Good",
      "veryGood": "Very Good",
      "excellent": "Excellent",
      "perfect": "Perfect",
      "ariaLabel": "Rate response as {{rating}}"
    },
    "regenerateWithModel": "Regenerate with Model",
    "regenerateWithModelAriaLabel": "Regenerate Response with Model Selection",
    "codeEditingDisabled": "Code editing is currently disabled.",
    "missingIdError": "Missing interaction or code block ID",
    "codeCannotBeEmpty": "Code cannot be empty",
    "codeEditedSuccessfully": "Code block edited successfully",
    "save": "Save",
    "cancel": "Cancel",
    "editCode": "Edit Code",
    "editCodeAriaLabel": "Edit code block",
    "copyCode": "Copy Code",
    "copyCodeAriaLabel": "Copy code block",
    "unfoldCode": "Unfold Code",
    "foldCode": "Fold Code",
    "unfoldCodeAriaLabel": "Unfold code block",
    "foldCodeAriaLabel": "Fold code block",
    "downloadFile": "Download File",
    "downloadFileAriaLabel": "Download code as file",
    "downloaded": "Downloaded {{filename}}",
    "downloadFailed": "Failed to download file",
    "unfold": "Unfold",
    "fold": "Fold",
    "unfoldAriaLabel": "Unfold response",
    "foldAriaLabel": "Fold response",
    "noCodeBlocksToDownload": "No code blocks with filepaths found to download",
    "downloadZip": "Download {{count}} code files as ZIP",
    "downloadZipAriaLabel": "Download code blocks as ZIP file",
    "zipDownloadFailed": "Failed to create ZIP file"
  },
  "emptyStateSetup": {
    "welcomeTitle": "Welcome to LiteChat",
    "setupProgress": "Setup Progress: {{progress}}%",
    "stepsCompleted": "Steps completed: {{completed}} of {{total}}",
    "configurationIssue": "Configuration issue detected. Please review provider settings.",
    "openProviderSettings": "Open Provider Settings",
    "addApiKey": "Add API Key",
    "addApiKeyDescription": "To use providers like OpenAI, Google, Anthropic (Claude), or OpenRouter or any OpenAI API compatible provider, add an API key. Keys are stored securely in your browser.",
    "localAiDescription": "If you want truly local AI, \"no internet required\", you can setup Ollama or, LMStudio (or any other local LLM solution with an OpenAI compatible API). These typically don't require API keys so see you in step 2.",
    "addProvider": "Add AI Provider",
    "addProviderDescription": "Connect to an AI provider you configured the key for...",
    "providerRedundancyNote": "This might look redundant, but it allows you to have multiple keys for the same provider (personal, professional, etc.)",
    "enableModels": "Enable Models",
    "enableModelsDescription": "Enable models for the provider you just added ({{providerName}}).",
    "enableModelsNote": "Enabling specific models improves the UI by reducing clutter and choice paralysis. You can enable more later in Settings.",
    "enableModelsNote2": "And just like before, you can choose to activate a model for a certain combination of key/provider!",
    "addProviderFirst": "Add a provider in Step {{stepNumber}} first.",
    "startChatting": "Start Chatting",
    "startChattingDescription": "You're all set! Click below to start your first chat.",
    "launching": "Launching...",
    "startFirstChat": "Start First Chat"
  }
}
